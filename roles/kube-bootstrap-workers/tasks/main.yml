---
# tasks file for kube-bootstrap-workers

- name: Create kubeconfig
  block:
    - name: create kubectl configuration directory
      file:
        path: "/home/{{item}}/.kube"
        state: directory
      with_items: "{{users}}"
    - name: copy /etc/kubernetes/admin.conf to ~/.kube/config
      copy:
        src: kubeconfig
        dest: "/home/{{item}}/.kube/config"
      with_items: "{{users}}"
  when: inventory_hostname in groups['kube-worker']


- name: Run task on master 1
  block:
    - name: register join token
      shell: grep -A1 "^kubeadm join" /etc/kubernetes/bootstrap.log
      register: r_join_token_command
      changed_when: false
      ignore_errors: true

    - name: fail the play when bootstrap fail
      fail:
        msg: "kubeinit fail on {{inventory_hostname}}, rm 'etc/kubernetes/bootstrap.log', ' rerun 'kubadm init --config=/etc/kubernetes/config.yaml> /etc/kubernetes/bootstrap.log' manually to debug"
      when: r_join_token_command.rc > 0
    
    - name: "Add K8S Token and Hash to dummy host"
      add_host:
        name:   "K8S_TOKEN_HOLDER"
        join_token_command:  "{{ r_join_token_command.stdout }}"        
      changed_when: false
  when: inventory_hostname == primary_etcd_master

- name: Run on workers
  block:
    - name: Print token command
      debug:
        msg: "{{inventory_hostname}} K8S_TOKEN_HOLDER K8S token is {{ hostvars['K8S_TOKEN_HOLDER']['join_token_command'] }}"
    
    - name: stat file if kubeadm init should run
      stat:
        path: /etc/kubernetes/join.log
      register: r_join

    - name: Join cluster
      shell: "{{ hostvars['K8S_TOKEN_HOLDER']['join_token_command'] }} > /etc/kubernetes/join.log"
      when: r_join.stat.exists == false
  when: inventory_hostname in groups['kube-worker']